[
    {
        "id": "4e76a40f.e01dbc",
        "type": "tab",
        "label": "My IOT-DirectWiFi",
        "disabled": false,
        "info": ""
    },
    {
        "id": "eb2c94ba.f33318",
        "type": "tab",
        "label": "My IOT-Gateway",
        "disabled": false,
        "info": ""
    },
    {
        "id": "91e036cc.edee28",
        "type": "tab",
        "label": "System",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8bf414b7.1e1a68",
        "type": "subflow",
        "name": "showData",
        "info": "output-1 Level chart\noutput-2 Device Info\noutput-3 Device STS",
        "category": "",
        "in": [
            {
                "x": 67.14296340942383,
                "y": 134.28567695617676,
                "wires": [
                    {
                        "id": "2c7a831f.2d6b0c"
                    },
                    {
                        "id": "930afbde.12cf18"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1347.6191539764404,
                "y": 56.19047296047211,
                "wires": [
                    {
                        "id": "4b51ca3.49fb534",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1347.6191520690918,
                "y": 141.1904582977295,
                "wires": [
                    {
                        "id": "4b51ca3.49fb534",
                        "port": 1
                    }
                ]
            },
            {
                "x": 1304.2857570648193,
                "y": 427.14289569854736,
                "wires": [
                    {
                        "id": "a50591c7.7887f",
                        "port": 0
                    },
                    {
                        "id": "c1c4ca0c.b7afc8",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "d359f0cf.9a9ef",
        "type": "subflow",
        "name": "LINE Notify",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 81.66664981842041,
                "y": 61.19047737121582,
                "wires": [
                    {
                        "id": "19d74789.a502c8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1194.9999961853027,
                "y": 48.33333206176758,
                "wires": [
                    {
                        "id": "19d74789.a502c8",
                        "port": 0
                    },
                    {
                        "id": "24e7e546.2f759a",
                        "port": 0
                    },
                    {
                        "id": "eac458d.75c59a8",
                        "port": 0
                    }
                ]
            }
        ],
        "icon": "node-red/alert.png"
    },
    {
        "id": "ab2dcbce.eb4ea8",
        "type": "subflow",
        "name": "send to TOT",
        "info": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "b02d17e0.a1f978"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1297.1429252624512,
                "y": 35.71428108215332,
                "wires": [
                    {
                        "id": "b02d17e0.a1f978",
                        "port": 0
                    },
                    {
                        "id": "5d60e6c6.def7d8",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "6e85ae8c.2d906",
        "type": "subflow",
        "name": "cipherTEXT",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "6b6de107.a5921"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 410.0000247955322,
                "y": 35.71429252624512,
                "wires": [
                    {
                        "id": "6b6de107.a5921",
                        "port": 0
                    }
                ]
            }
        ],
        "icon": "node-red/parser-csv.png"
    },
    {
        "id": "5265620c.56483c",
        "type": "subflow",
        "name": "deCipherTEXT",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 202.8571434020996,
                "y": 91.42857265472412,
                "wires": [
                    {
                        "id": "be946fdb.cef14"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 727.1428813934326,
                "y": 80.00000381469727,
                "wires": [
                    {
                        "id": "be946fdb.cef14",
                        "port": 0
                    }
                ]
            }
        ],
        "icon": "node-red/parser-csv.png"
    },
    {
        "id": "259b7cde.621174",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "true",
            "allowSwipe": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "9e1e5fc0.2a59a",
        "type": "ui_tab",
        "z": "",
        "name": "Main",
        "icon": "dashboard"
    },
    {
        "id": "e831cc56.5b288",
        "type": "ui_group",
        "z": "",
        "name": "Group 1",
        "tab": "9e1e5fc0.2a59a",
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "a1e29e7a.ce25f",
        "type": "ui_group",
        "z": "",
        "name": "Group 2",
        "tab": "9e1e5fc0.2a59a",
        "order": 2,
        "disp": false,
        "width": "4",
        "collapse": false
    },
    {
        "id": "85664728.6c50a8",
        "type": "mongodb3",
        "z": "",
        "uri": "mongodb://localhost:27017/device_data",
        "name": "device_data",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "4f0032ae.a807dc",
        "type": "function",
        "z": "4e76a40f.e01dbc",
        "name": "chkData-in",
        "func": "var msg1 = {};  // error out\nvar msg2 = {};  // data out\nvar proto = \"udp\";\nif (msg.topic == \"tcpIN\") proto = \"tcp\"\nif (msg.payload === undefined || msg.payload.length === 0) {\n    msg1 = {\n        'proto': proto,\n        '_session': msg._session,\n\t\t'ip': msg.ip,\n\t\t'port': msg.port,\n\t\t'payload': \"debug\",\n\t\t'info': \"Error: Invalid Argument. [Raw:\"+msg.payload+\"]\"\n    }\n    msg2 = null;\n} else {\n    msg1 = null;\n    msg2 = {\n\t\t'payload': msg.payload,\n\t\t'remote': {\n\t\t    'proto': proto,\n\t\t    '_session': msg._session,\n\t\t\t'ip': msg.ip,\n\t\t\t'port': msg.port\n\t\t}\n    };\n}\nreturn [msg1,msg2];",
        "outputs": 2,
        "noerr": 0,
        "x": 323.45249938964844,
        "y": 70.46137046813965,
        "wires": [
            [
                "2284a810.5fe188"
            ],
            [
                "df38ba25.237678",
                "3ccb53e.db466ac"
            ]
        ]
    },
    {
        "id": "2284a810.5fe188",
        "type": "function",
        "z": "4e76a40f.e01dbc",
        "name": "format Response",
        "func": "var d = new Date();     // get server local time\nvar d1 = (\"0\"+d.getDate()).slice(-2)+\"-\";\nd1 += (\"0\"+(d.getMonth()+1)).slice(-2)+\"-\";\nd1 += d.getFullYear()+\" \";\nd1 += (\"0\"+d.getHours()).slice(-2)+\":\";\nd1 += (\"0\"+d.getMinutes()).slice(-2)+\":\";\nd1 += (\"0\"+d.getSeconds()).slice(-2);\n\nvar debug_msg = {}, tcpResp = {}, udpResp = {};\ndebug_msg.payload = {\n  'time': d1,\n  'from': msg.ip +\":\"+msg.port,\n  'Resp': msg.payload.slice (0,-1),\n  'info': msg.info\n}\n\nif (msg.ip == '127.0.0.1') {          // local host, debug only\n  debug_msg.payload.info = \"[sim] \" + msg.info;\n  tcpResp = null; udpResp = null;\n} else if (msg.payload == \"debug\") {  // debug only\n  tcpResp = null; udpResp = null;\n} else {\n  if (msg.proto == \"tcp\") {\n    tcpResp = msg; udpResp = null;\n    debug_msg.payload.from += \" [tcp]\";\n  } else {\n    tcpResp = null; udpResp = msg;\n    debug_msg.payload.from += \" [udp]\";\n  }\n}\nreturn [debug_msg, tcpResp, udpResp];",
        "outputs": 3,
        "noerr": 0,
        "x": 1047.6739616394043,
        "y": 57.400794982910156,
        "wires": [
            [
                "30c8bb41.a11464"
            ],
            [
                "7f1f9d74.f83c44"
            ],
            [
                "f6c949dd.05a8b8"
            ]
        ]
    },
    {
        "id": "bf412d2c.b083e",
        "type": "udp in",
        "z": "4e76a40f.e01dbc",
        "name": "udp 10722",
        "iface": "",
        "port": "10722",
        "ipv": "udp4",
        "multicast": "false",
        "group": "",
        "datatype": "utf8",
        "x": 122.9117431640625,
        "y": 69.91077136993408,
        "wires": [
            [
                "4f0032ae.a807dc"
            ]
        ]
    },
    {
        "id": "30c8bb41.a11464",
        "type": "debug",
        "z": "4e76a40f.e01dbc",
        "name": "Server resp",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1280.3377380371094,
        "y": 37.41075134277344,
        "wires": []
    },
    {
        "id": "f6c949dd.05a8b8",
        "type": "udp out",
        "z": "4e76a40f.e01dbc",
        "name": "udpResponse",
        "addr": "",
        "iface": "",
        "port": "",
        "ipv": "udp4",
        "outport": "",
        "base64": false,
        "multicast": "false",
        "x": 1288.2096939086914,
        "y": 109.95541286468506,
        "wires": []
    },
    {
        "id": "90949d26.91f37",
        "type": "ui_chart",
        "z": "4e76a40f.e01dbc",
        "name": "",
        "group": "e831cc56.5b288",
        "order": 1,
        "width": "12",
        "height": "4",
        "label": "Water Level, cm",
        "chartType": "line",
        "legend": "true",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "wait for data...",
        "dot": true,
        "ymin": "-15",
        "ymax": "15",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "x": 1381.7215461730957,
        "y": 586.0319571495056,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "10682295.bd9a4d",
        "type": "ui_chart",
        "z": "4e76a40f.e01dbc",
        "name": "Outdoor",
        "group": "e831cc56.5b288",
        "order": 2,
        "width": "12",
        "height": "4",
        "label": "Outdoor Weather",
        "chartType": "line",
        "legend": "true",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "wait for data...",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#d62728",
            "#1f77b4",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "x": 1360.7392768859863,
        "y": 509.65795612335205,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d497ef2b.4e4f9",
        "type": "ui_chart",
        "z": "4e76a40f.e01dbc",
        "name": "rain",
        "group": "e831cc56.5b288",
        "order": 3,
        "width": "12",
        "height": "4",
        "label": "Rain, mm",
        "chartType": "line",
        "legend": "false",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "wait for data...",
        "dot": false,
        "ymin": "0",
        "ymax": "2",
        "removeOlder": "2",
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": 0,
        "useOneColor": false,
        "colors": [
            "#2ca02c",
            "#2ca02c",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "useOldStyle": false,
        "x": 1352.167797088623,
        "y": 545.372211933136,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "47d3102e.29ca6",
        "type": "ui_template",
        "z": "4e76a40f.e01dbc",
        "group": "a1e29e7a.ce25f",
        "name": "showLevel",
        "order": 3,
        "width": "4",
        "height": "4",
        "format": "<div flex layout=\"row\" ng-style=\"{'font-size':'16px','font-weight':'bold'}\" layout-align=\"center start\">\n== {{msg.topic}} ==\n</div>\n<div layout=\"row\" ng-style=\"{'font-size':'14px'}\" layout-align=\"start\" ng-repeat=\"data in msg.payload\">\n  <span flex = \"45\">{{data.name}}</span>\n  <span flex>{{data.value}}</span>\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 1372.9666862487793,
        "y": 628.9386949539185,
        "wires": [
            []
        ]
    },
    {
        "id": "6099ecf4.8bb144",
        "type": "ui_template",
        "z": "4e76a40f.e01dbc",
        "group": "a1e29e7a.ce25f",
        "name": "showStat",
        "order": 6,
        "width": "4",
        "height": "4",
        "format": "<div flex layout=\"row\" ng-style=\"{'font-size':'16px'}\" layout-align=\"center start\">\n== Statistic ==\n</div>\n<div layout=\"row\" ng-style=\"{'font-size':'14px'}\" layout-align=\"space-between start\" ng-repeat=\"data in msg.payload\">\n  <span flex = \"45\">{{data.name}}</span>\n  <span flex>{{data.value}}</span> \n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 1365.4768409729004,
        "y": 670.8339138031006,
        "wires": [
            []
        ]
    },
    {
        "id": "dbae5334.cf9b2",
        "type": "ui_button",
        "z": "8bf414b7.1e1a68",
        "name": "SetButton",
        "group": "a1e29e7a.ce25f",
        "order": 5,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "Set",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "setLevel-set",
        "x": 475.9813461303711,
        "y": 205.9697723388672,
        "wires": [
            [
                "ab472736.832c48"
            ]
        ]
    },
    {
        "id": "605e332b.50345c",
        "type": "ui_numeric",
        "z": "8bf414b7.1e1a68",
        "name": "Set to",
        "label": "Set to:",
        "group": "a1e29e7a.ce25f",
        "order": 4,
        "width": "3",
        "height": "1",
        "passthru": false,
        "topic": "setLevel-value",
        "format": "{{value}}",
        "min": "-200",
        "max": "200",
        "step": 1,
        "x": 498.1393013000488,
        "y": 131.3219394683838,
        "wires": [
            [
                "ab472736.832c48"
            ]
        ]
    },
    {
        "id": "ab472736.832c48",
        "type": "function",
        "z": "8bf414b7.1e1a68",
        "name": "get-devData",
        "func": "var msg1 = {};\nvar devID = global.get (\"devID\");\nif (msg.topic == \"setLevel-value\") {    // new level value change, update var\n  global.set (\"newLevel\", msg.payload);\n  msg1 = null;\n} else if ((msg.topic == \"setLevel-set\") && (devID != \"n/a\")) { // button press, inject msg\n  var filter = {\"deviceID\": devID};\n  var option = {\"projection\": {\"deviceID\":1, \"levelRef\":1, \"devData\":1}};\n  msg1.payload = [filter, option];\n} else {\n  msg1 = null;\n}\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "x": 662.7472381591797,
        "y": 131.54510879516602,
        "wires": [
            [
                "67273e93.5b455"
            ]
        ]
    },
    {
        "id": "83f7acd1.ae32f",
        "type": "function",
        "z": "8bf414b7.1e1a68",
        "name": "set-new Level",
        "func": "var d = new Date();\nvar msg_out = {}, msg_updRef = {};\nvar newLevel = global.get (\"newLevel\") || 0;\n\nif (msg.payload._id !== undefined) {    // rec found\n  var distance = msg.payload.devData.distance;\n  var filter = {\"deviceID\": msg.payload.deviceID};\n  var update = {\"$set\":{\n    \"devData.levelCM\": newLevel,\n    \"levelRef\": newLevel + distance\n  }};\n  msg_updRef = {\"payload\": [filter, update]};\n  \n  msg_out = {\n    \"topic\": msg.payload.deviceID,\n    \"timestamp\": d,\n    \"payload\": msg.payload.devData\n  };\n  msg_out.payload.levelCM = newLevel;\n  msg_out.payload.updChart = true;\n} else {\n  msg_updRef = null;\n}\nreturn [msg_out, msg_updRef];",
        "outputs": 2,
        "noerr": 0,
        "x": 874.5527763366699,
        "y": 206.68385314941406,
        "wires": [
            [
                "4b51ca3.49fb534"
            ],
            [
                "e9b2137f.6fe6a"
            ]
        ]
    },
    {
        "id": "c5931322.31bce",
        "type": "subflow:8bf414b7.1e1a68",
        "z": "4e76a40f.e01dbc",
        "name": "",
        "x": 1157.5084800720215,
        "y": 623.4641742706299,
        "wires": [
            [
                "90949d26.91f37"
            ],
            [
                "47d3102e.29ca6"
            ],
            [
                "6099ecf4.8bb144"
            ]
        ]
    },
    {
        "id": "4b51ca3.49fb534",
        "type": "function",
        "z": "8bf414b7.1e1a68",
        "name": "format Level Output",
        "func": "var msg1 = {}, Chart_level = {};\nvar devID = global.get (\"devID\");\n\nif (msg.payload.updChart) {\n  if (msg.topic == \"n/a\") {\n    Chart_level.payload = [];  // remove comment to reset chart\n  } else if (msg.payload.levelCM < 999) {\n    Chart_level = {\n      \"topic\":     msg.topic,\n      \"payload\":   msg.payload.levelCM,\n      \"timestamp\": msg.timestamp\n    };\n  } else {\n    Chart_level = null;\n  }\n} else {\n  Chart_level = null;\n}\nvar levelCM = (msg.payload.levelCM < 999)?msg.payload.levelCM:\"--\";\nmsg1.topic = msg.topic; \nmsg1.payload = {\n  data1: { \"name\":\"updated:\",   'value':formatDate(msg.timestamp) },\n  data2: { \"name\":\"%batt:\",     'value':msg.payload.batt },\n  data3: { \"name\":\"%RH:\",       'value':msg.payload.rh },\n  data4: { \"name\":\"TempC:\",     'value':msg.payload.tempC },\n  data5: { \"name\":\"feel like:\", 'value':msg.payload.HidxC + \" [\"+ msg.payload.HidxT+\"]\" },\n  data6: { \"name\":\"rain,mm:\",   'value':msg.payload.rainMM },\n  data7: { \"name\":\"- last 1 hr:\", 'value':msg.payload.rainMM1hr },\n  data8: { \"name\":\"- last 1 d:\", 'value':msg.payload.rainMM24hr },\n  data9: { \"name\":\"level,cm:\",  'value':levelCM }\n};\nreturn [Chart_level, msg1];\n\nfunction formatDate(d) {\n  var monthNames =[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\n  var d1 = d.getDate()+'/'+(d.getMonth()+1);\n  d1    += ' '+d.getHours()+':'+(\"0\"+d.getMinutes()).slice(-2);\n  return d1;\n}",
        "outputs": 2,
        "noerr": 0,
        "x": 1202.647933959961,
        "y": 62.87448310852051,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "7a30f7ff.1c25c8",
        "type": "tcp in",
        "z": "4e76a40f.e01dbc",
        "name": "tcp 10722",
        "server": "server",
        "host": "",
        "port": "10722",
        "datamode": "stream",
        "datatype": "utf8",
        "newline": "\\n",
        "topic": "tcpIN",
        "base64": false,
        "x": 124.42463684082031,
        "y": 114.72807598114014,
        "wires": [
            [
                "4f0032ae.a807dc"
            ]
        ]
    },
    {
        "id": "7f1f9d74.f83c44",
        "type": "tcp out",
        "z": "4e76a40f.e01dbc",
        "host": "",
        "port": "",
        "beserver": "reply",
        "base64": false,
        "end": false,
        "name": "tcpResponse",
        "x": 1279.6510887145996,
        "y": 72.22224807739258,
        "wires": []
    },
    {
        "id": "6ac46495.16573c",
        "type": "inject",
        "z": "4e76a40f.e01dbc",
        "name": "Sent to TOT",
        "topic": "",
        "payload": "buttonPressed",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.2",
        "x": 316.6669635772705,
        "y": 787.7534294128418,
        "wires": [
            [
                "c46b244a.39fb78"
            ]
        ]
    },
    {
        "id": "2386977c.cc4448",
        "type": "bigstatus",
        "z": "4e76a40f.e01dbc",
        "name": "send data to TOT",
        "locale": "",
        "show_date": false,
        "show_duration": false,
        "x": 1203.4379653930664,
        "y": 758.1543235778809,
        "wires": [
            []
        ]
    },
    {
        "id": "b1c812af.0088c",
        "type": "inject",
        "z": "4e76a40f.e01dbc",
        "name": "Notify to Line",
        "topic": "",
        "payload": "buttonPressed",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.2",
        "x": 317.14332008361816,
        "y": 831.3100318908691,
        "wires": [
            [
                "da669196.a8bcf"
            ]
        ]
    },
    {
        "id": "607b91ce.32623",
        "type": "bigstatus",
        "z": "4e76a40f.e01dbc",
        "name": "send alert to LINE?",
        "locale": "",
        "show_date": false,
        "show_duration": false,
        "x": 1206.3100051879883,
        "y": 813.8693361282349,
        "wires": [
            []
        ]
    },
    {
        "id": "10e9ebdc.56b334",
        "type": "function",
        "z": "d359f0cf.9a9ef",
        "name": "add-headers",
        "func": "msg.headers = {\n  \"content-type\":\"application/x-www-form-urlencoded\",\n  \"Authorization\":\"Bearer \" + msg.token\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 745.7375755310059,
        "y": 119.24104881286621,
        "wires": [
            [
                "50368ba4.ab3dc4"
            ]
        ]
    },
    {
        "id": "50368ba4.ab3dc4",
        "type": "http request",
        "z": "d359f0cf.9a9ef",
        "name": "Line-Notify",
        "method": "POST",
        "ret": "txt",
        "url": "https://notify-api.line.me/api/notify/",
        "tls": "",
        "x": 885.5704689025879,
        "y": 223.43337631225586,
        "wires": [
            [
                "24e7e546.2f759a"
            ]
        ]
    },
    {
        "id": "19d74789.a502c8",
        "type": "function",
        "z": "d359f0cf.9a9ef",
        "name": "sendToLINE?",
        "func": "var status_msg = {};\nvar LINE_msg = {};\nvar sendToLINE = global.get (\"sendToLINE\");\nif ((msg.payload == \"buttonPressed\")||(msg.payload == \"init\")) {\n  if ((sendToLINE.ok > 0)||(msg.payload == \"init\")) {\n    sendToLINE = {\"ok\":0,\"err\":0};\n    status_msg = {\n      \"payload\": \"don't send\",\n      \"shape\": \"dot\",\n      \"fill\":\"red\"\n    }\n  } else {\n    sendToLINE = {\"ok\":1,\"err\":0};\n    status_msg = {\n      \"payload\": \"ok: 0, err: 0\",\n      \"shape\": \"dot\",\n      \"fill\":\"green\"\n    }\n  }\n  global.set (\"sendToLINE\", sendToLINE);\n  LINE_msg = null;\n} else {                    // incoming alert message\n  status_msg = null;\n  if (sendToLINE.ok > 0) LINE_msg = msg;\n  else LINE_msg = null;\n}\nreturn [status_msg, LINE_msg];",
        "outputs": 2,
        "noerr": 0,
        "x": 221.5740966796875,
        "y": 61.1041784286499,
        "wires": [
            [],
            [
                "42a09e21.712b2",
                "780ab7e8.fb9238",
                "14a12951.f25887",
                "c0a735d8.8e3dd8"
            ]
        ]
    },
    {
        "id": "da669196.a8bcf",
        "type": "subflow:d359f0cf.9a9ef",
        "z": "4e76a40f.e01dbc",
        "name": "",
        "x": 986.0742797851562,
        "y": 813.8826704025269,
        "wires": [
            [
                "607b91ce.32623"
            ]
        ]
    },
    {
        "id": "780ab7e8.fb9238",
        "type": "function",
        "z": "d359f0cf.9a9ef",
        "name": "Alert - Heat Index",
        "func": "var msg1 = {};\nif (msg.payload.alert === undefined) return null;\nif (msg.payload.alert.isHidxT == \"super hot\") {\n  msg1.token = msg.payload.alert.lineToken;\n  msg1.payload = {\n    \"message\": \"[\"+msg.payload.devID+\"] ร้อนตับแล่บ...โปรดระวังสุขภาพ\",\n    \"stickerPackageId\": 2,\n    \"stickerId\": 526\n  };\n} else msg1 = null;\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "x": 454.2857208251953,
        "y": 167.14287948608398,
        "wires": [
            [
                "10e9ebdc.56b334"
            ]
        ]
    },
    {
        "id": "42a09e21.712b2",
        "type": "function",
        "z": "d359f0cf.9a9ef",
        "name": "Alert - Rain",
        "func": "var msg1 = {};\nif (msg.payload.alert === undefined) return null;\nelse if (msg.payload.alert.isRain == \"start\") {\n  msg1.token = msg.payload.alert.lineToken;\n  msg1.payload = {\n    'message': \"[\"+msg.payload.devID+\"] ฝนตกแล้วจร้า...\",\n    'stickerPackageId': 2,\n    'stickerId': 507\n  };\n/*} else if (msg.payload.alert.isRain == \"stop\") {\n  msg1.token = msg.payload.alert.lineToken;\n  msg1.payload = {\n    'message': \"[\"+msg.payload.devID+\"] ฝนหยุดแล้วเน้อ...\",\n    'stickerPackageId': 2,\n    'stickerId': 509\n  };*/\n} else {\n  msg1 = null;\n}\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "x": 436.6376953125,
        "y": 123.07795333862305,
        "wires": [
            [
                "10e9ebdc.56b334"
            ]
        ]
    },
    {
        "id": "b02d17e0.a1f978",
        "type": "function",
        "z": "ab2dcbce.eb4ea8",
        "name": "sendToTOT?",
        "func": "var msg1 = {};\nvar msg2 = {};\nvar sent2TOT = global.get (\"sent2TOT\");\nif ((msg.payload == \"buttonPressed\")||(msg.payload == \"init\")) {\n  if ((sent2TOT.ok > 0)||(msg.payload == \"init\")) {\n    sent2TOT = {\"ok\":0,\"err\":0};\n    msg1 = {\n      \"payload\": \"don't send\",\n      \"shape\": \"dot\",\n      \"fill\":\"red\"\n    }\n    msg2 = null;\n  } else {\n    sent2TOT = {\"ok\":1,\"err\":0};\n    msg1 = {\n      \"payload\": \"ok: 0, err: 0\",\n      \"shape\": \"dot\",\n      \"fill\":\"green\"\n    }\n  }\n  global.set (\"sent2TOT\", sent2TOT);\n  msg2 = null;\n} else {\n  msg1 = null;\n  if (sent2TOT.ok > 0) msg2 = msg;\n  else msg2 = null;\n}\n\nreturn [msg1, msg2];",
        "outputs": 2,
        "noerr": 0,
        "x": 228.5714225769043,
        "y": 37.14285850524902,
        "wires": [
            [],
            [
                "d2531d45.b4db8"
            ]
        ]
    },
    {
        "id": "d2531d45.b4db8",
        "type": "function",
        "z": "ab2dcbce.eb4ea8",
        "name": "construc_KaiData",
        "func": "var url = \"http://farm.totcloud.com/WS/FromDevice.aspx?\";\nvar s=0, b=0, t=0, rh=0, r=0;\nvar urlO = [];\nfor (var i=0; i<3; i++) {\n    s = msg.payload.s + (msg.payload.s===999)?0:Math.round((Math.random()*10) - 5);\n    b = msg.payload.b-Math.round(Math.random()*4);\n    t = msg.payload.t + Math.round((Math.random()*4) - 2);\n    rh = msg.payload.rh + Math.round((Math.random()*4) - 2);\n    r = msg.payload.rain + Math.round((Math.random()*40) - 20)/10;\n    urlO[i] = url+\"a=device\"+(i+1)+\"&s1=\"+s+\"&b1=\"+b+\"&w1=\"+t+\"&w2=\"+rh+\"&w3=\"+r;\n}\nvar msg1 = {'from':'dev1', 'url': urlO[0]};\nvar msg2 = {'from':'dev2', 'url': urlO[1]};\nvar msg3 = {'from':'dev3', 'url': urlO[2]};\n\nreturn [msg1, msg2, msg3];",
        "outputs": 4,
        "noerr": 0,
        "x": 554.2857055664062,
        "y": 204.2857208251953,
        "wires": [
            [
                "523e54ce.2c508c"
            ],
            [
                "a54c3e39.fb93d"
            ],
            [
                "f715a2ad.cc83c"
            ],
            []
        ]
    },
    {
        "id": "523e54ce.2c508c",
        "type": "http request",
        "z": "ab2dcbce.eb4ea8",
        "name": "http-1",
        "method": "GET",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 718.5944366455078,
        "y": 169.14950561523438,
        "wires": [
            [
                "5d60e6c6.def7d8"
            ]
        ]
    },
    {
        "id": "a54c3e39.fb93d",
        "type": "http request",
        "z": "ab2dcbce.eb4ea8",
        "name": "http-2",
        "method": "GET",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 720.1510887145996,
        "y": 199.68910026550293,
        "wires": [
            [
                "5d60e6c6.def7d8"
            ]
        ]
    },
    {
        "id": "f715a2ad.cc83c",
        "type": "http request",
        "z": "ab2dcbce.eb4ea8",
        "name": "http-3",
        "method": "GET",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 718.2464866638184,
        "y": 231.59404373168945,
        "wires": [
            [
                "5d60e6c6.def7d8"
            ]
        ]
    },
    {
        "id": "c46b244a.39fb78",
        "type": "subflow:ab2dcbce.eb4ea8",
        "z": "4e76a40f.e01dbc",
        "name": "",
        "x": 990.7146759033203,
        "y": 749.8812274932861,
        "wires": [
            [
                "2386977c.cc4448"
            ]
        ]
    },
    {
        "id": "5193146c.fb959c",
        "type": "switch",
        "z": "4e76a40f.e01dbc",
        "name": "groupID?",
        "property": "payload.groupID",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "IOT-0001",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1073.9289016723633,
        "y": 232.34634971618652,
        "wires": [
            [
                "ad707e84.a9615"
            ],
            []
        ]
    },
    {
        "id": "ad707e84.a9615",
        "type": "link out",
        "z": "4e76a40f.e01dbc",
        "name": "to_dashboard_IOT-0001",
        "links": [
            "841e73de.d9882",
            "9c29d12a.eae78"
        ],
        "x": 1219.2169036865234,
        "y": 224.35045623779297,
        "wires": []
    },
    {
        "id": "841e73de.d9882",
        "type": "link in",
        "z": "4e76a40f.e01dbc",
        "name": "dashboard_IOT-0001",
        "links": [
            "ad707e84.a9615"
        ],
        "x": 79.6430892944336,
        "y": 551.0817375183105,
        "wires": [
            [
                "57f22d2a.5c2184",
                "3353abca.86e164"
            ]
        ]
    },
    {
        "id": "6b6de107.a5921",
        "type": "function",
        "z": "6e85ae8c.2d906",
        "name": "cipherText",
        "func": "msg.payload = Cipher(msg.payload);\nreturn msg;\n\nfunction Cipher (txt) {\n    var OutText = \"\";\n    var d = new Date();\n    var cKey = (d.getMilliseconds() % 120)+2;          // ciphering key 7 bits\n    var LShift = (d.getMilliseconds() % 4) + 3;        // 3..6\n    var i, encChar2, carryChar;\n  \n    encChar2 = 0x00;\n    txt += String.fromCharCode(0);       // add padding\n    for (i = 0; i < txt.length; i++) {\n        encChar = txt.charCodeAt(i);                     // get ASCii value 0..127    \n        encChar = (encChar ^ cKey);                                   // XOR with cKey\n        encChar = (0x7F&(encChar<<LShift))|(encChar>>(7-LShift));     // Left shift with carry for 7 bits\n        carryChar = encChar & (0xFF >> (7 - (i % 6)));                //0..5 -> 7..2, get carry bit\n        encChar = (encChar2 << (6-(i%6))) | (encChar >> ((i%6)+1));\n        OutText += String.fromCharCode(encCharS2(encChar));\n        if ((i % 6) === 5) {\n            OutText += String.fromCharCode(encCharS2(carryChar));\n            carryChar = 0x00;\n        }\n        encChar2 = carryChar;    \n    }\n    return String.fromCharCode(encCharS2(cKey >> 1))+String.fromCharCode(encCharS2((cKey & 0x01) | (LShift << 3)))+OutText;\n}\n\nfunction encCharS2 (Asciitxt) {                  \t\t  // encode ASCii 0..63 to readable text\n    if (Asciitxt <= 25) {                                 // 0..25\n        return (Asciitxt + 65);                           // A..Z (65..90)\n    } else if ((Asciitxt >= 26) && (Asciitxt <= 51)) {    // 26..51\n        return (Asciitxt + 71);                           // a..z (97..122)\n    } else if ((Asciitxt >= 52) && (Asciitxt <= 61)) {    // 52..61\n        return (Asciitxt - 4);                            // 0..9 (48..57)\n    } else if (Asciitxt == 62) {\n        return 46;\n    } else if (Asciitxt == 63) {\n        return 95;\n    } else {\n        return 126;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 262.9762191772461,
        "y": 36.0962438583374,
        "wires": [
            []
        ]
    },
    {
        "id": "be946fdb.cef14",
        "type": "function",
        "z": "5265620c.56483c",
        "name": "decipherText",
        "func": "msg.payload = DeCipher(msg.payload);\nreturn msg;\n\nfunction DeCipher (txt) {\n    var cKey = decCharS2(txt.charCodeAt(0));\n    var RShift = decCharS2(txt.charCodeAt(1));\n    var decChar, decChar2, decChar3, j;\n    var OutText = \"\";\n  \n    cKey = (cKey << 1) | (RShift & 0x01);\n    RShift = RShift >> 3;  \n    txt = txt.substring(2);                                        // remove header\n    txt += String.fromCharCode(0);                                 // add padding  \n    decChar2 = decCharS2(txt.charCodeAt(0));                       // get ASCii value 0..63\n    j = 0;\n    for (i = 1; i < txt.length; i++) {\n        j++;\n        decChar = decCharS2(txt.charCodeAt(i));                      // get ASCii value 0..63\n        if ((j % 6)===0) {\n            decChar2 = (decChar2 << 6) | decChar;      \n            decChar3 = (decChar2>>RShift)|(0x7F & (decChar2<<(7-RShift)));  // Right shift with carry for 7 bits\n            decChar3 = (decChar3 ^ cKey);                                   // XOR with cKey\n            OutText += String.fromCharCode(decChar3);\n            i++;\n            decChar2 = decCharS2(txt.charCodeAt(i));                   // get ASCii value 0..63\n        } else {\n            decChar2 = (decChar2 << (j%6)) | (decChar >> (6-(j%6)));      \n            decChar3 = (decChar2>>RShift)|(0x7F & (decChar2<<(7-RShift)));  // Right shift with carry for 7 bits\n            decChar3 = (decChar3 ^ cKey);                                   // XOR with cKey\n            OutText += String.fromCharCode(decChar3);\n            decChar2 = decChar & (0x3F >> (j%6));\n        }\n    }\n    return OutText.substring(0, OutText.length - 1);\n}\n\nfunction decCharS2 (Asciitxt) {                  \t\t\t\t// decode readble text to ASCii 0..127\n    if ((Asciitxt >= 65) && (Asciitxt <= 90)) {           // A..Z (65..90)\n        return (Asciitxt - 65);                             // 0..25\n    } else if ((Asciitxt >= 97) && (Asciitxt <= 122)) {   // a..z (97..122)\n        return (Asciitxt - 71);                             // 26..51\n    } else if ((Asciitxt >= 48) && (Asciitxt <= 57)) {    // 0..9 (38..57)\n        return (Asciitxt + 4);                              // 52..61\n    } else if (Asciitxt == 46) {\n        return 62;\n    } else if (Asciitxt == 95) {\n        return 63;\n    } else {\n        return 126;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 464.3998031616211,
        "y": 81.75597667694092,
        "wires": [
            []
        ]
    },
    {
        "id": "d35a12bb.c8a37",
        "type": "inject",
        "z": "4e76a40f.e01dbc",
        "name": "LINE test message",
        "topic": "LINE_notify",
        "payload": "{\"message\":\"test test\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 715.9774169921875,
        "y": 843.8841161727905,
        "wires": [
            [
                "da669196.a8bcf"
            ]
        ]
    },
    {
        "id": "14a12951.f25887",
        "type": "function",
        "z": "d359f0cf.9a9ef",
        "name": "Alert - LINE message",
        "func": "if (msg.topic == \"LINE_notify\") {\n  msg.token = \"fkTBZDxnLpm42ZRyKMwbJIel48N6zdDz3zhCIcybDet\";\n  return msg;\n} else return null;",
        "outputs": 1,
        "noerr": 0,
        "x": 465.73902893066406,
        "y": 320.0149116516113,
        "wires": [
            [
                "10e9ebdc.56b334"
            ]
        ]
    },
    {
        "id": "24e7e546.2f759a",
        "type": "function",
        "z": "d359f0cf.9a9ef",
        "name": "statusSent",
        "func": "var sendToLINE = global.get (\"sendToLINE\");\nif (msg.statusCode == 200) {\n  status_msg = {\n    \"payload\": \"message sent ok\",\n    \"shape\": \"dot\",\n    \"fill\":\"blue\"\n  }\n  sendToLINE.ok++;\n} else {\n  status_msg = {\n    \"payload\": \"message sent error\",\n    \"shape\": \"dot\",\n    \"fill\":\"red\"\n  }\n  sendToLINE.err++;\n}\nglobal.set (\"sendToLINE\", sendToLINE);\nreturn status_msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 878.5963249206543,
        "y": 336.2649097442627,
        "wires": [
            [
                "f88e7c7e.0d134"
            ]
        ]
    },
    {
        "id": "eac458d.75c59a8",
        "type": "function",
        "z": "d359f0cf.9a9ef",
        "name": "statusReset",
        "func": "var sendToLINE = global.get (\"sendToLINE\");\nvar status_msg = {\n  \"payload\": \"ok: \"+(sendToLINE.ok-1)+\", err: \"+sendToLINE.err,\n  \"shape\": \"dot\",\n  \"fill\":\"green\"\n}\nreturn status_msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890.0249176025391,
        "y": 506.2649087905884,
        "wires": [
            []
        ]
    },
    {
        "id": "f88e7c7e.0d134",
        "type": "delay",
        "z": "d359f0cf.9a9ef",
        "name": "delay 5 sec",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 885.8184204101562,
        "y": 429.1766586303711,
        "wires": [
            [
                "eac458d.75c59a8"
            ]
        ]
    },
    {
        "id": "a45eb05b.87deb",
        "type": "debug",
        "z": "4e76a40f.e01dbc",
        "name": "dataOut",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1067.465576171875,
        "y": 279.1817169189453,
        "wires": []
    },
    {
        "id": "df38ba25.237678",
        "type": "function",
        "z": "4e76a40f.e01dbc",
        "name": "extractData",
        "func": "var d = new Date(); // get server local time\nvar msg1 = {};      // error out\nvar msg2 = {};      // data out\nvar splitData = msg.payload.split(',');\nif (splitData.length == 6) {\n  var attempt = parseInt (\"0x\" + splitData[5].slice(2,4));\n  var NoResp  = parseInt (\"0x\" + splitData[5].slice(6,8));\n  if (NoResp > attempt) NoResp = attempt;\n  msg1 = null;\n  msg2 = {\n    payload: {'deviceID': splitData[2]},\n    remote: msg.remote,\n    DEVdata: {\n      'timestamp':  d,\n      'RetryNr':    parseInt (splitData[0].slice(4)) - 5,\n      'rcvKey':     splitData[0].slice(0,4),\n      'FWversion':  splitData[1],\n      'devID':      splitData[2],\n      'data': {\n        'batt':     parseInt (\"0x\" + splitData[4].slice(0,2)),\n        'distance': parseInt(splitData[3]),\n        'tempC':    parseInt (\"0x\" + splitData[4].slice(2,4)),\n        'rh':       parseInt (\"0x\" + splitData[4].slice(4,6)),\n        'rainCnt':  ((parseInt (\"0x\" + splitData[4].slice(6,8)) << 8) + parseInt (\"0x\" + splitData[4].slice(8,10)))\n      },\n      'sts': {\n        'reboot':   ((parseInt (\"0x\" + splitData[5].slice(0,2)) & 0x80)?1:0),\n        'attempt':  attempt,\n        'DNSfail':  parseInt (\"0x\" + splitData[5].slice(4,6)),\n        'NoResp':   NoResp,\n        'iNetfail': parseInt (\"0x\" + splitData[5].slice(8,10)),\n        'errWiFi':  parseInt (\"0x\" + splitData[5].slice(10,12)),\n        'errHost':  parseInt (\"0x\" + splitData[5].slice(12,14))\n      }\n    }\n  };\n} else {\n  msg1 = {\n    'proto':    msg.remote.proto,\n    '_session': msg._session,\n    'ip':       msg.remote.ip,\n    'port':     msg.remote.port,\n    'payload':  \"11,invalid parameter\\n\",\n    'info':     \"Error: Invalid parameter. Raw: \" + msg.payload\n  }\n  msg2 = null;\n}\nreturn [msg1,msg2];",
        "outputs": 2,
        "noerr": 0,
        "x": 320.9772415161133,
        "y": 124.65767288208008,
        "wires": [
            [
                "2284a810.5fe188"
            ],
            [
                "cf39f8a.441db08"
            ]
        ]
    },
    {
        "id": "30629297.4a8f1e",
        "type": "function",
        "z": "4e76a40f.e01dbc",
        "name": "chkDevData/Alert",
        "func": "var msg_Resp = {}, msg_out = {};\n\nif ((msg.payload === undefined)||(msg.payload.length === 0)) {  // check if array is empty\n  msg_Resp = ResponseMSG (msg, \"13,device not found\\n\", \"Error: Device not found. [\"+msg.DEVdata.devID+\"]\");\n  msg_out = null;\n} else if (msg.payload.length > 1) {                          // duplicate devide list\n  msg_Resp = ResponseMSG (msg, \"14,duplicate device ID\\n\", \"Error: Duplicate device. [\"+msg.DEVdata.devID+\"]\");\n  msg_out = null;\n} else {\n  var sKey = msg.DEVdata.rcvKey + \"-\" + msg.DEVdata.RetryNr;\n  if (msg.DEVdata.rcvKey == msg.payload[0].sessionKey) {      // duplicate key\n    msg_Resp = ResponseMSG (msg, \"0,\"+sKey+\",0\\n\", \"OK: Duplicate key. [\"+msg.DEVdata.devID+\", \"+sKey+\"]\");\n    msg_out = null;\n  } else {                                                    // valid incoming data\n    //  ==== check OTA firmware ====\n    var isOTA = 0;\n    var fotaFW = msg.payload[0].config.fotaFW;\n    if ((fotaFW.length === 0) || (fotaFW === undefined) || (fotaFW === msg.DEVdata.FWversion)) {\t\t// OTA not required\n      msg_Resp = ResponseMSG (msg, \"0,\"+sKey+\",0\\n\", \"OK. new key. [\"+msg.DEVdata.devID+\", \"+sKey+\"]\");\n    } else {\n      msg_Resp = ResponseMSG (msg, \"1,\"+sKey+\",\"+fotaFW+\",0\\n\", \"OK. new key+OTA. [\"+msg.DEVdata.devID+\", \"+sKey+\", \"+fotaFW+\"]\");\n\t  isOTA = 1;\n    }\n    \n    // ====== Server response complete, construct data message ===============\n    var seqNrStep = (msg.DEVdata.sts.reboot==1)?0:seqStep(msg.payload[0].sessionKey, msg.DEVdata.rcvKey);\n    msg_out = {\n      \"payload\": {                      // find info within 24hr\n        \"devID\": msg.DEVdata.devID,\n        \"timestamp\": {$gt: new Date(msg.DEVdata.timestamp - 24*3600000)}\n       },\n      \"DEVdata\": msg.DEVdata,\n      \"alert\": { \"lineToken\": msg.payload[0].config.lineNotifyToken }\n    }\n    \n    msg_out.DEVdata.sts.isOTA = isOTA;\n    msg_out.DEVdata.sts.iNetfail = (seqNrStep > 0)?(seqNrStep - 1):0;\n    if (msg_out.DEVdata.data.distance===0) msg_out.DEVdata.data.levelCM=999;\n    else msg_out.DEVdata.data.levelCM = msg.payload[0].levelRef - msg_out.DEVdata.data.distance;\n    \n    // ======= calculate Level Alert =============\n    if ((msg_out.DEVdata.data.distance<5)&&(msg_out.DEVdata.data.distance>0)&&(msg.payload[0].devData.distance<5)) {\n      msg_out.alert.isLevelH = \"high\";\n    } else {\n      msg_out.alert.isLevelH = \"no\";\n    }\n    \n    // ======= calculate Heat Index =============\n    var HIdx = calcHeatIndex (msg.DEVdata.data.tempC, msg.DEVdata.data.rh);\n    var prevHidxT = (msg.payload[0].devData === undefined)?HIdx.HidxText:msg.payload[0].devData.HidxT;\n    msg_out.DEVdata.data.HidxC = HIdx.HidxC;\n    msg_out.DEVdata.data.HidxT = HIdx.HidxText;\n    msg_out.alert.isHidxT = HidxChange (HIdx.HidxText, prevHidxT);\n    \n    // ======= calculate Rain in MM =============\n    var rainMM = 0, prevRainCnt = 0, prevRainMM = 0;\n    if (msg.payload[0].devData !== undefined) {\n      prevRainCnt = msg.payload[0].devData.rainCnt;\n      prevRainMM = msg.payload[0].devData.rainMM;\n    }\n    var rainMMperTip = (msg.payload[0].config.rainMMperTip.rainVolmmx10/msg.payload[0].config.rainMMperTip.rainAreaCM2);\n    if (msg_out.DEVdata.data.rainCnt < prevRainCnt) { // incoming accRainCnt<lastaccRainCnt, something wrong. maybe device reset\n      rainMM = msg_out.DEVdata.data.rainCnt * rainMMperTip;\n    } else {\n      rainMM = (msg_out.DEVdata.data.rainCnt - prevRainCnt) * rainMMperTip;\n    }\n    rainMM = roundToTwo(rainMM);\n    if (msg_out.DEVdata.data.rainCnt > 0x7FFF) msg_out.DEVdata.data.rainCnt -= 0x8000;\n    msg_out.DEVdata.data.rainMM = roundToTwo (rainMM);\n    msg_out.alert.isRain = rainStatus (msg_out.DEVdata.data.rainMM, prevRainMM); \n  }\n}\nreturn [msg_Resp, msg_out];\n\n// ===================================================\nfunction HidxChange (nowHidxT, prevHidxT) {\n  return (prevHidxT != nowHidxT) ? nowHidxT: \"no\";\n}\n\nfunction rainStatus (nowRainMM, prevRainMM) {\n  var IsRain = \"no\";\n  if (nowRainMM > 0) {                // raining\n    if (prevRainMM > 0) IsRain = \"raining\";\n    else IsRain = \"start\";\n  } else {                            // no rain\n    if (prevRainMM > 0) IsRain = \"stop\";\n    else IsRain = \"no\";\n  }\n  return IsRain;\n}\n\nfunction calcHeatIndex (tempC, RH) {   // calc Heat Index\n  var T = (tempC*9/5)+32;\n  var Hc1 = -42.379+(2.04901523*T)+(10.14333127*RH)-(0.22475541*T*RH)-(0.00683783*T*T)-(0.05481717*RH*RH)+(0.00122874*T*T*RH)+(0.00085282*T*RH*RH)-(0.00000199*T*T*RH*RH)\n  var Hc2 = ((T>=80)&&(T<=112)&&(RH<13))?(-1*((13-RH)/4)*Math.sqrt((17-Math.abs(T-95))/17)): (((T>=80)&&(T<=87)&&(RH>85))?((RH-85)/10)*((87-T)/5): 0);\n  var HidxF = ((Hc1+Hc2)<80)?0.5*(T+61+((T-68)*1.2)+(RH*0.094)): (Hc1+Hc2);\n  var HidxC = Math.round((HidxF-32)*5/9);\n  var HidxT = (HidxC>50)?\"super hot\":((HidxC>40)?\"very hot\":((HidxC>35)?\"hot\":\"comfort\"));\n  var objHidx = { \"HidxC\": HidxC, \"HidxText\": HidxT };\n  return objHidx;\n}\n\nfunction ResponseMSG (msg, respCode, respInfo) {\n  var respMSG = {\n    \"proto\": msg.remote.proto,\n    \"_session\": msg.remote._session,\n    \"ip\": msg.remote.ip,\n    \"port\": msg.remote.port,\n    \"payload\": respCode,\n    \"info\": respInfo\n  }\n  return respMSG;\n}\n\nfunction roundToTwo(num) { return +(Math.round(num + \"e+2\")  + \"e-2\"); }\n\nfunction seqStep (prevSEQ, thisSEQ) {\n  var prev = parseInt (\"0x\" + prevSEQ);\n  var next = parseInt (\"0x\" + thisSEQ);\n  if (thisSEQ < prevSEQ) {        // roll over\n    return (65536 - prev) + next;\n  } else {\n    return next - prev;\n  }  \n}",
        "outputs": 2,
        "noerr": 0,
        "x": 340.73921966552734,
        "y": 237.51478576660156,
        "wires": [
            [
                "2284a810.5fe188"
            ],
            [
                "e95b34e9.cdb098"
            ]
        ]
    },
    {
        "id": "fa238992.89fd98",
        "type": "function",
        "z": "4e76a40f.e01dbc",
        "name": "updData/formatOutput",
        "func": "var accRainMM1hr = 0, accRainMM24hr = 0;\nvar msg_Rain = {}, msg_UpdData = {}, msg_out = {};\n\nif (msg.payload.length > 0) {\n  for (var i = 0; i < msg.payload.length; i++) {\n    accRainMM24hr += msg.payload[i].rainMM;\n    if (((msg.DEVdata.timestamp - msg.payload[i].timestamp)/3600000) < 1) {\n      accRainMM1hr += msg.payload[i].rainMM;\n    }\n  }\n}\nmsg.DEVdata.data.rainMM1hr  = roundToTwo(accRainMM1hr + msg.DEVdata.data.rainMM);\nmsg.DEVdata.data.rainMM24hr = roundToTwo(accRainMM24hr + msg.DEVdata.data.rainMM);\n\n// ============= format data out =====================\nmsg_out.payload = {\n  'timestamp': msg.DEVdata.timestamp,\n  'groupID': msg.DEVdata.devID.slice (0,8),\n  'deviceID': msg.DEVdata.devID,\n  'data': msg.DEVdata.data,\n  'sts': msg.DEVdata.sts,\n  'alert': msg.alert\n};\n\n// ======== insert new rain data to mongoDB =========\nif (msg.DEVdata.data.rainMM > 0) {\n  msg_Rain.payload = {\n    'devID': msg.DEVdata.devID,\n    'timestamp': msg.DEVdata.timestamp,\n    'rainMM': msg.DEVdata.data.rainMM\n  };\n} else {\n  msg_Rain = null;\n}\n// ============== update data to mongoDB ============\nvar update = {};\nvar devData = msg.DEVdata.data;\nvar stsData = {\n  'sts.reboot':  msg.DEVdata.sts.reboot,\n  'sts.attempt': msg.DEVdata.sts.attempt,\n  'sts.DNSfail': msg.DEVdata.sts.DNSfail,\n  'sts.NoResp':  msg.DEVdata.sts.NoResp,\n  'sts.iNetfail':msg.DEVdata.sts.iNetfail,\n  'sts.errWiFi': msg.DEVdata.sts.errWiFi,\n  'sts.errHost': msg.DEVdata.sts.errHost\n};\n\nif (msg.DEVdata.sts.isOTA === 0) {\n  update = {'$inc': stsData, '$set':{\n    'FWver': msg.DEVdata.FWversion,\n    'sessionKey': msg.DEVdata.rcvKey,\n    'lastUpdate': msg.DEVdata.timestamp,\n    'devData': devData,\n    'config.fotaFW': \"\",\n    'sts.isOTA':0\n  }};\n} else {\n  update = {'$inc': stsData, '$set':{\n    'FWver': msg.DEVdata.FWversion,\n    'sessionKey': msg.DEVdata.rcvKey,\n    'lastUpdate': msg.DEVdata.timestamp,\n    'devData': devData,\n    'sts.isOTA':1\n  }};\n}\nmsg_UpdData.payload = [{'deviceID': msg.DEVdata.devID}, update, {'upsert': true}];\nreturn [msg_Rain, msg_UpdData, msg_out];\n\nfunction roundToTwo(num) { return +(Math.round(num + \"e+2\")  + \"e-2\"); }",
        "outputs": 3,
        "noerr": 0,
        "x": 753.8941345214844,
        "y": 250.6101779937744,
        "wires": [
            [
                "d198fd0f.da5d8"
            ],
            [
                "f2a76b58.ce63d8"
            ],
            [
                "5193146c.fb959c",
                "a45eb05b.87deb"
            ]
        ]
    },
    {
        "id": "57f22d2a.5c2184",
        "type": "function",
        "z": "4e76a40f.e01dbc",
        "name": "dashboardData (defaultOutdoor DeviceID)",
        "func": "var OutdoordevID = \"IOT-0001D001\";\nvar Chart_data = {}, Level_data = {}, Kai_data = {}, msg_Alert = {};\n\nif (msg.payload == \"init\") {\n  global.set (\"devID\", \"n/a\");\n  global.set (\"OutdoordevID\", OutdoordevID);\n  global.set (\"sendToLINE\", {\"ok\":0,\"err\":0});\n  global.set (\"sent2TOT\", {\"ok\":0,\"err\":0});\n  Chart_data = null;\n  Level_data = msg;\n  Kai_data = msg;\n  msg_Alert = msg;\n} else {        // incoming data, check current selected devID\n  Chart_data = {\n    \"topic\":     msg.payload.deviceID,\n    \"timestamp\": msg.payload.timestamp,\n    \"payload\": {\n      \"tempC\":   msg.payload.data.tempC,\n      \"rh\":      msg.payload.data.rh,\n      \"rainMM\":  msg.payload.data.rainMM,\n      \"levelCM\": msg.payload.data.levelCM\n    }\n  };\n  if (msg.payload.deviceID !== OutdoordevID) {\n    Chart_data.payload.tempC = -1;\n    Chart_data.payload.rh = -1;\n    Chart_data.payload.rainMM = -1;\n  }\n  var currentDevID = global.get ('devID');\n  if ((currentDevID == \"n/a\")||(currentDevID == msg.payload.deviceID)) {\n    global.set (\"devID\", msg.payload.deviceID);\n    Level_data = {\n      \"topic\":     msg.payload.deviceID,\n      \"timestamp\": msg.payload.timestamp,\n      \"payload\": {\n        \"updChart\":   true,\n        \"batt\":       msg.payload.data.batt,\n        \"levelCM\":    msg.payload.data.levelCM,\n        \"tempC\":      msg.payload.data.tempC,\n        \"rh\":         msg.payload.data.rh,\n        \"rainMM\":     msg.payload.data.rainMM,\n        \"rainMM1hr\":  msg.payload.data.rainMM1hr,\n        \"rainMM24hr\": msg.payload.data.rainMM24hr,\n        \"HidxC\":      msg.payload.data.HidxC,\n        \"HidxT\":      msg.payload.data.HidxT\n      }\n    };\n    Kai_data = { \"payload\": {\n      \"s\": msg.payload.data.levelCM,\n      \"b\": msg.payload.data.batt,\n      \"t\": msg.payload.data.tempC,\n      \"rh\": msg.payload.data.rh,\n      \"rain\": msg.payload.data.rainMM\n    }};\n    msg_Alert = { \"payload\": {\n      \"devID\": msg.payload.deviceID,\n      \"alert\": msg.payload.alert\n    }};\n  } else {\n    Level_data = null;\n    Kai_data = null;\n    msg_Alert = null;\n  }\n}\nreturn [Chart_data, Level_data, Kai_data, msg_Alert];",
        "outputs": 4,
        "noerr": 0,
        "x": 650.3473815917969,
        "y": 589.0876121520996,
        "wires": [
            [
                "3fbe31d2.d23ece"
            ],
            [
                "c5931322.31bce"
            ],
            [
                "c46b244a.39fb78"
            ],
            [
                "da669196.a8bcf"
            ]
        ]
    },
    {
        "id": "3fbe31d2.d23ece",
        "type": "function",
        "z": "4e76a40f.e01dbc",
        "name": "Chart-data",
        "func": "var tempC={}, rh={}, rain={}, water_level={};\nif (msg.payload.tempC >= 0) {\n  tempC = {\n    \"topic\":     \"tempC\",\n    \"payload\":   msg.payload.tempC,\n    \"timestamp\": msg.timestamp\n  };\n} else { tempC = null }\nif (msg.payload.rh >= 0) {\n  rh = {\n    \"topic\":     \"%RH\",\n    \"payload\":   msg.payload.rh,\n    \"timestamp\": msg.timestamp\n  };\n} else { rh = null }\nif (msg.payload.rainMM >= 0) {\n  rain = {\n    \"topic\":     \"rain\",\n    \"payload\":   msg.payload.rainMM,\n    \"timestamp\": msg.timestamp\n  };\n} else { rain = null }\nif (msg.payload.levelCM < 999) {\n  water_level = {\n    \"topic\":     msg.topic,\n    \"payload\":   msg.payload.levelCM,\n    \"timestamp\": msg.timestamp\n  };\n} else { water_level = null }\n\nreturn [tempC, rh, rain, water_level];",
        "outputs": 4,
        "noerr": 0,
        "x": 1168.3621711730957,
        "y": 539.4223136901855,
        "wires": [
            [
                "10682295.bd9a4d"
            ],
            [
                "10682295.bd9a4d"
            ],
            [
                "d497ef2b.4e4f9"
            ],
            [
                "90949d26.91f37"
            ]
        ]
    },
    {
        "id": "7addfd70.d8bc44",
        "type": "inject",
        "z": "4e76a40f.e01dbc",
        "name": "Sys init",
        "topic": "",
        "payload": "init",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 149.28580474853516,
        "y": 635.8334999084473,
        "wires": [
            [
                "57f22d2a.5c2184"
            ]
        ]
    },
    {
        "id": "5d60e6c6.def7d8",
        "type": "function",
        "z": "ab2dcbce.eb4ea8",
        "name": "statusSent",
        "func": "var sent2TOT = global.get (\"sent2TOT\");\nif (msg.statusCode == 200) sent2TOT.ok++;\nelse sent2TOT.err++;\n\nglobal.set (\"sent2TOT\", sent2TOT);\nvar status_msg = {\n  \"payload\": \"ok: \"+(sent2TOT.ok-1)+\", err: \"+sent2TOT.err,\n  \"shape\": \"dot\",\n  \"fill\":\"green\"\n}\nreturn status_msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 878.5714492797852,
        "y": 104.28572273254395,
        "wires": [
            []
        ]
    },
    {
        "id": "2c7a831f.2d6b0c",
        "type": "function",
        "z": "8bf414b7.1e1a68",
        "name": "chkInput",
        "func": "var msg_out = {};\nvar msg_setLevel = {};\nvar d = new Date();\nif (msg.payload == \"init\") {\n  msg_out = {\n    \"topic\":\"n/a\",\n    \"timestamp\": d,\n    \"payload\": {\n      \"updChart\": true,\n      \"batt\":0, \"levelCM\":0, \"tempC\":0, \"rh\":0,\n      \"rainMM\":0, \"rainMM1hr\":0, \"rainMM24hr\":0,\n      \"HidxC\":0, \"HidxT\":\"n/a\"\n    }\n  };\n  msg_setLevel = { \"topic\":\"init\", \"payload\": 0 };\n} else {\n  msg_out = msg;\n  msg_setLevel = null;\n}\nreturn [msg_out, msg_setLevel];",
        "outputs": 2,
        "noerr": 0,
        "x": 316.6666946411133,
        "y": 63.57143974304199,
        "wires": [
            [
                "4b51ca3.49fb534"
            ],
            [
                "605e332b.50345c"
            ]
        ]
    },
    {
        "id": "dcb9c08b.5eb8",
        "type": "ui_button",
        "z": "8bf414b7.1e1a68",
        "name": "ResetButton",
        "group": "a1e29e7a.ce25f",
        "order": 7,
        "width": "4",
        "height": "1",
        "passthru": false,
        "label": "Reset",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "resetSTS",
        "x": 175.73912048339844,
        "y": 412.8720817565918,
        "wires": [
            [
                "930afbde.12cf18"
            ]
        ]
    },
    {
        "id": "930afbde.12cf18",
        "type": "function",
        "z": "8bf414b7.1e1a68",
        "name": "get-stsData",
        "func": "if (msg.payload == \"init\") return null\n\nvar msg1 = {};\nvar Query_msg = {};\nvar devID = global.get (\"devID\");\nif (msg.topic == \"resetSTS\") {\n  var filter = {\"deviceID\": devID};\n  var update = {\"$set\":{\n    \"sts.reboot\": 0,\n    \"sts.attempt\":0,\n    \"sts.DNSfail\":0,\n    \"sts.NoResp\":0,\n    \"sts.iNetfail\":0,\n    \"sts.errWiFi\":0,\n    \"sts.errHost\":0,\n    \"sts.isOTA\":0\n  }};\n  msg1.topic = devID; \n  msg1 = {\n    \"payload\": [filter, update],\n    \"extra\": {\n      data1: {\"name\":\"reboot:\",\"value\":0},\n      data2: {\"name\":\"attempt:\",\"value\":0},\n      data3: {\"name\":\"DNS fail:\",\"value\":0},\n      data4: {\"name\":\"No Resp:\",\"value\":0},\n      data5: {\"name\":\"Sent fail:\",\"value\":0},\n      data6: {\"name\":\"- err WiFi:\",\"value\":0},\n      data7: {\"name\":\"- err Host:\",\"value\":0},\n      data8: {\"name\":\"%succ:\",\"value\":0},\n      data9: {\"name\":\"FW-ver:\",\"value\":\"-\"}\n    }\n  };\n  Query_msg = null;\n} else {\n  msg1 = null;\n  var filter = {\"deviceID\": devID};\n  var option = {\"projection\": {\"FWver\":1, \"sts\":1}};\n  Query_msg.payload = [filter, option];\n}\n\nreturn [msg1, Query_msg];",
        "outputs": 2,
        "noerr": 0,
        "x": 448.9335823059082,
        "y": 413.2094268798828,
        "wires": [
            [
                "a50591c7.7887f",
                "e9b2137f.6fe6a"
            ],
            [
                "1e608b4d.13d2b5"
            ]
        ]
    },
    {
        "id": "a50591c7.7887f",
        "type": "function",
        "z": "8bf414b7.1e1a68",
        "name": "formatSTS-0",
        "func": "var msg1 = {};\nmsg1.payload = msg.extra;\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "x": 855.7640838623047,
        "y": 407.1726417541504,
        "wires": [
            []
        ]
    },
    {
        "id": "c1c4ca0c.b7afc8",
        "type": "function",
        "z": "8bf414b7.1e1a68",
        "name": "formatSTS",
        "func": "var msg1 = {};\nif (msg.payload.sts === undefined) {\n  msg1.payload = {\n    data1: {'name':\"reboot:\",'value':0},\n    data2: {'name':\"attempt:\",'value':0},\n\tdata3: {'name':\"DNS fail:\",'value':0},\n\tdata4: {'name':\"No Resp:\",'value':0},\n\tdata5: {'name':\"Sent fail:\",'value':0},\n\tdata6: {'name':\"- err WiFi:\",'value':0},\n\tdata7: {'name':\"- err Host:\",'value':0},\n\tdata8: {'name':\"%succ:\",'value':0},\n\tdata9: {'name':\"FW-ver:\",'value':\"--\"}\n  };\n} else {\n  var succ = (msg.payload.sts.attempt===0)?0:(msg.payload.sts.attempt - msg.payload.sts.iNetfail)/msg.payload.sts.attempt;\n  succ = roundToTwo (succ * 100);\n  var FWver = msg.payload.FWver + ((msg.payload.sts.isOTA===1)?\" [u]\":\"\");\n  msg1.payload = {\n    data1: {'name':\"reboot:\",'value':msg.payload.sts.reboot},\n    data2: {'name':\"attempt:\",'value':msg.payload.sts.attempt},\n\tdata3: {'name':\"DNS fail:\",'value':msg.payload.sts.DNSfail},\n\tdata4: {'name':\"No Resp:\",'value':msg.payload.sts.NoResp},\n\tdata5: {'name':\"Sent fail:\",'value':msg.payload.sts.iNetfail},\n\tdata6: {'name':\"- err WiFi:\",'value':msg.payload.sts.errWiFi},\n\tdata7: {'name':\"- err Host:\",'value':msg.payload.sts.errHost},\n\tdata8: {'name':\"%succ:\",'value':succ},\n\tdata9: {'name':\"FW-ver:\",'value':FWver}\n  };\n}\nreturn msg1;\n\nfunction roundToTwo(num) { return +(Math.round(num + \"e+2\")  + \"e-2\"); }",
        "outputs": 1,
        "noerr": 0,
        "x": 855.763916015625,
        "y": 460.0297818183899,
        "wires": [
            []
        ]
    },
    {
        "id": "bf46d251.8d472",
        "type": "http request",
        "z": "91e036cc.edee28",
        "name": "duckDNS",
        "method": "GET",
        "ret": "txt",
        "url": "https://www.duckdns.org/update?domains=db1server,myiotdata,myiotfota&token=f3d3ca72-3b67-4068-b34a-df82c83c3434&ip=",
        "tls": "",
        "x": 426.6955871582031,
        "y": 66.68402099609375,
        "wires": [
            [
                "50f25da5.de2aa4"
            ]
        ]
    },
    {
        "id": "14b16c41.95f2a4",
        "type": "inject",
        "z": "91e036cc.edee28",
        "name": "upadteDuckDNS",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "86400",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 218.40987014770508,
        "y": 66.68409555298933,
        "wires": [
            [
                "bf46d251.8d472"
            ]
        ]
    },
    {
        "id": "50f25da5.de2aa4",
        "type": "debug",
        "z": "91e036cc.edee28",
        "name": "SystemDebug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 669.5527191162109,
        "y": 67.1126480102539,
        "wires": []
    },
    {
        "id": "e2590f66.0ac12",
        "type": "inject",
        "z": "91e036cc.edee28",
        "name": "ServerStat",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 201.76806259155273,
        "y": 117.17509841918945,
        "wires": [
            [
                "921d03f6.9fb6c"
            ]
        ]
    },
    {
        "id": "921d03f6.9fb6c",
        "type": "DeviceStats",
        "z": "91e036cc.edee28",
        "name": "",
        "mem": true,
        "nw": false,
        "load": true,
        "hostname": true,
        "useString": false,
        "x": 434.8524398803711,
        "y": 117.25050926208496,
        "wires": [
            [
                "50f25da5.de2aa4"
            ]
        ]
    },
    {
        "id": "3ccb53e.db466ac",
        "type": "debug",
        "z": "4e76a40f.e01dbc",
        "name": "dataIN",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 796.695556640625,
        "y": 163.35067749023438,
        "wires": []
    },
    {
        "id": "c0a735d8.8e3dd8",
        "type": "function",
        "z": "d359f0cf.9a9ef",
        "name": "Alert - High Water Level",
        "func": "var msg1 = {};\nif (msg.payload.alert === undefined) return null;\nif (msg.payload.alert.isLevelH == \"high\") {\n  msg1.token = msg.payload.alert.lineToken;\n  msg1.payload = {\n    \"message\": \"[\"+msg.payload.devID+\"] น้ำท่วมสูง...โปรดระวัง\",\n    \"stickerPackageId\": 2,\n    \"stickerId\": 511\n  };\n} else msg1 = null;\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "x": 472.8819580078125,
        "y": 217.15773010253906,
        "wires": [
            [
                "10e9ebdc.56b334"
            ]
        ]
    },
    {
        "id": "8190ae61.d0002",
        "type": "comment",
        "z": "d359f0cf.9a9ef",
        "name": "Stick List URL",
        "info": "https://developers.line.me/media/messaging-api/sticker_list.pdf",
        "x": 210.099214553833,
        "y": 114.32049369812012,
        "wires": []
    },
    {
        "id": "3370b749.917a28",
        "type": "ui_template",
        "z": "4e76a40f.e01dbc",
        "group": "a1e29e7a.ce25f",
        "name": "DeviceList",
        "order": 2,
        "width": "4",
        "height": "2",
        "format": "<script>\n  scope.sendDevId = function($event) {\n    var data = $event.target.attributes.id.value;\n    this.send({payload: data});\n  }.bind(scope);\n</script>\n<div layout=\"row\" ng-style=\"{'font-size':'16px'}\" layout-align=\"start\">\n  <span flex style=\"text-align:center\">== {{msg.topic}} ==</span>\n</div>\n<div layout=\"row\" ng-style=\"{'font-size':'12px'}\" layout-align=\"start\" ng-repeat=\"data in msg.payload\">\n  <span flex=15 id=\"{{data.devID}}\" class=\"{{data.icon}}\" style=\"margin-top:4px;color:{{data.iconcolor}}\" ng-click=\"sendDevId($event)\"></span>\n  <span flex style=\"color:{{data.textcolor}}\">{{data.name}}</span>\n</div>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 659.0728073120117,
        "y": 461.2053680419922,
        "wires": [
            [
                "f7aa6438.fc13d8",
                "2a122c05.913a64"
            ]
        ]
    },
    {
        "id": "f7aa6438.fc13d8",
        "type": "function",
        "z": "4e76a40f.e01dbc",
        "name": "DevClick",
        "func": "var msg_out = {};\nif ((msg.payload==\"reload Dev\")||(msg.payload == \"init\")) {\n  msg_out = null;\n} else {\n  msg_out = {\n    \"payload\": {'deviceID': msg.payload}\n  }\n}\nreturn msg_out;",
        "outputs": 1,
        "noerr": 0,
        "x": 897.0092639923096,
        "y": 375.9476909637451,
        "wires": [
            [
                "432ddc9a.3c3604"
            ]
        ]
    },
    {
        "id": "d1810113.a31f4",
        "type": "mongodb3 in",
        "z": "4e76a40f.e01dbc",
        "service": "_ext_",
        "configNode": "85664728.6c50a8",
        "name": "loadDevList",
        "collection": "device_list",
        "operation": "find.toArray",
        "x": 672.0240631103516,
        "y": 376.82064485549927,
        "wires": [
            [
                "7617fd73.46a1a4"
            ]
        ]
    },
    {
        "id": "cf39f8a.441db08",
        "type": "mongodb3 in",
        "z": "4e76a40f.e01dbc",
        "service": "_ext_",
        "configNode": "85664728.6c50a8",
        "name": "loadDevData",
        "collection": "device_list",
        "operation": "find.toArray",
        "x": 327.1676712036133,
        "y": 170.01492404937744,
        "wires": [
            [
                "30629297.4a8f1e"
            ]
        ],
        "icon": "node-red/leveldb.png"
    },
    {
        "id": "d198fd0f.da5d8",
        "type": "mongodb3 in",
        "z": "4e76a40f.e01dbc",
        "service": "_ext_",
        "configNode": "85664728.6c50a8",
        "name": "insertRainData",
        "collection": "rainData",
        "operation": "insertOne",
        "x": 1092.8819961547852,
        "y": 127.15774059295654,
        "wires": [
            []
        ],
        "icon": "node-red/leveldb.png"
    },
    {
        "id": "f2a76b58.ce63d8",
        "type": "mongodb3 in",
        "z": "4e76a40f.e01dbc",
        "service": "_ext_",
        "configNode": "85664728.6c50a8",
        "name": "updateData",
        "collection": "device_list",
        "operation": "updateOne",
        "x": 1082.881908416748,
        "y": 171.44345092773438,
        "wires": [
            []
        ],
        "icon": "node-red/leveldb.png"
    },
    {
        "id": "e95b34e9.cdb098",
        "type": "mongodb3 in",
        "z": "4e76a40f.e01dbc",
        "service": "_ext_",
        "configNode": "85664728.6c50a8",
        "name": "loadRainData",
        "collection": "rainData",
        "operation": "find.toArray",
        "x": 544.3105239868164,
        "y": 244.3005886077881,
        "wires": [
            [
                "fa238992.89fd98"
            ]
        ],
        "icon": "node-red/leveldb.png"
    },
    {
        "id": "67273e93.5b455",
        "type": "mongodb3 in",
        "z": "8bf414b7.1e1a68",
        "service": "_ext_",
        "configNode": "85664728.6c50a8",
        "name": "getRefLevel",
        "collection": "device_list",
        "operation": "findOne",
        "x": 852.881965637207,
        "y": 122.87202262878418,
        "wires": [
            [
                "83f7acd1.ae32f"
            ]
        ],
        "icon": "node-red/leveldb.png"
    },
    {
        "id": "e9b2137f.6fe6a",
        "type": "mongodb3 in",
        "z": "8bf414b7.1e1a68",
        "service": "_ext_",
        "configNode": "85664728.6c50a8",
        "name": "updateOne-DeviceList",
        "collection": "device_list",
        "operation": "updateOne",
        "x": 1127.1678047180176,
        "y": 288.58630561828613,
        "wires": [
            []
        ],
        "icon": "node-red/leveldb.png"
    },
    {
        "id": "1e608b4d.13d2b5",
        "type": "mongodb3 in",
        "z": "8bf414b7.1e1a68",
        "service": "_ext_",
        "configNode": "85664728.6c50a8",
        "name": "loadSTS",
        "collection": "device_list",
        "operation": "findOne",
        "x": 655.7391052246094,
        "y": 460.01492261886597,
        "wires": [
            [
                "c1c4ca0c.b7afc8"
            ]
        ],
        "icon": "node-red/leveldb.png"
    },
    {
        "id": "7617fd73.46a1a4",
        "type": "function",
        "z": "4e76a40f.e01dbc",
        "name": "createDevList",
        "func": "// icon-list: https://www.w3schools.com/icons/fontawesome_icons_webapp.asp\n\nvar msg1 = {};\nvar devList=\"\", nodeID=\"\";\nvar d = new Date();\nvar OutdoorDevID = global.get(\"OutdoordevID\");\n\nif (msg.payload.length > 0) {\n  for (var i = 0; i < msg.payload.length; i++) {\n    nodeID = \"00\" + (i+1);\n    devList += '\"node'+ nodeID.slice (-3);\n    devList += '\":{\"devID\":\"'+ msg.payload[i].deviceID + '\",';\n    devList += '\"name\":\"'+ msg.payload[i].deviceID + ((msg.payload[i].deviceID==OutdoorDevID)?\" [w]\":\"\") + '\",';\n    if ((d - msg.payload[i].lastUpdate)>3600000) {  // device inactive\n      devList += '\"icon\":\"fa fa-ban\",';\n      devList += '\"iconcolor\":\"red\",';\n      devList += '\"textcolor\":\"red\"},';\n    } else {\n      devList += '\"icon\":\"fa fa-circle\",';\n      devList += '\"iconcolor\":\"lime\",';\n      devList += '\"textcolor\":\"white\"},';\n    }\n  }\n  devList = devList.slice (0,-1);\n}\nmsg1.payload = JSON.parse(\"{\"+ devList + \"}\");\nmsg1.topic = msg.topic;\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "x": 431.21559143066406,
        "y": 457.39592123031616,
        "wires": [
            [
                "3370b749.917a28"
            ]
        ]
    },
    {
        "id": "432ddc9a.3c3604",
        "type": "mongodb3 in",
        "z": "4e76a40f.e01dbc",
        "service": "_ext_",
        "configNode": "85664728.6c50a8",
        "name": "loadDevData",
        "collection": "device_list",
        "operation": "find.toArray",
        "x": 1085.0249729156494,
        "y": 375.01512145996094,
        "wires": [
            [
                "9b9b1285.8f433"
            ]
        ],
        "icon": "node-red/leveldb.png"
    },
    {
        "id": "9b9b1285.8f433",
        "type": "function",
        "z": "4e76a40f.e01dbc",
        "name": "chkDevData/Alert",
        "func": "var msg_out = {\n  \"topic\": \"n/a\",\n  \"timestamp\": \"\",\n  \"payload\": {\"batt\":0,\"distance\":0,\"tempC\":0,\"rh\":0,\"rainCnt\":0,\"levelCM\":0,\"HidxC\":0,\"HidxT\":\"n/a\",\"rainMM\":0,\"rainMM1hr\":0,\"rainMM24hr\":0}\n};\nif ((msg.payload === undefined)||(msg.payload.length != 1)) {\n  return null;\n} else {\n  global.set (\"devID\", msg.payload[0].deviceID);\n  msg_out.topic = msg.payload[0].deviceID;\n  msg_out.timestamp = msg.payload[0].lastUpdate;\n  if (msg.payload[0].devData !== undefined) {\n    msg_out.payload.updChart = false;           // do not update level chart\n    msg_out.payload.batt = msg.payload[0].devData.batt;\n    msg_out.payload.levelCM = msg.payload[0].devData.levelCM;\n    msg_out.payload.tempC = msg.payload[0].devData.tempC;\n    msg_out.payload.rh = msg.payload[0].devData.rh;\n    msg_out.payload.rainMM = msg.payload[0].devData.rainMM;\n    msg_out.payload.rainMM1hr = msg.payload[0].devData.rainMM1hr;\n    msg_out.payload.rainMM24hr = msg.payload[0].devData.rainMM24hr;\n    msg_out.payload.HidxC = msg.payload[0].devData.HidxC;\n    msg_out.payload.HidxT = msg.payload[0].devData.HidxT;\n  }\n}\nreturn msg_out;",
        "outputs": 1,
        "noerr": 0,
        "x": 929.5485763549805,
        "y": 465.9673557281494,
        "wires": [
            [
                "c5931322.31bce"
            ]
        ]
    },
    {
        "id": "2a122c05.913a64",
        "type": "function",
        "z": "4e76a40f.e01dbc",
        "name": "loadDevList (define GroupID here)",
        "func": "var GroupID = \"IOT-0001\";\nvar msg_out = {};\nif ((msg.payload==\"reload Dev\")||(msg.payload == \"init\")) {\n  var filter = {\"deviceID\": {'$regex': \"^\"+GroupID}};\n  var option = {\"projection\": {\"deviceID\": 1, \"lastUpdate\":1}, \"sort\": {\"deviceID\":1}};\n  msg_out.payload = [filter, option];\n  msg_out.topic = GroupID;\n} else {\n  msg_out = null;\n}\nreturn msg_out;",
        "outputs": 1,
        "noerr": 0,
        "x": 435.02906036376953,
        "y": 376.68419218063354,
        "wires": [
            [
                "d1810113.a31f4"
            ]
        ]
    },
    {
        "id": "d3e15324.a42e4",
        "type": "inject",
        "z": "4e76a40f.e01dbc",
        "name": "5min refresh",
        "topic": "",
        "payload": "reload Dev",
        "payloadType": "str",
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 121.69558715820312,
        "y": 325.017333984375,
        "wires": [
            [
                "2a122c05.913a64"
            ]
        ]
    },
    {
        "id": "3353abca.86e164",
        "type": "function",
        "z": "4e76a40f.e01dbc",
        "name": "refreshDev",
        "func": "var msg1 = {};\nmsg1.payload=\"reload Dev\";\nreturn msg1;",
        "outputs": 1,
        "noerr": 0,
        "x": 143.36226272583008,
        "y": 411.68400955200195,
        "wires": [
            [
                "2a122c05.913a64"
            ]
        ]
    },
    {
        "id": "913708a6.2e9c58",
        "type": "debug",
        "z": "eb2c94ba.f33318",
        "name": "logDebug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 494.9999694824219,
        "y": 123.33332824707031,
        "wires": []
    },
    {
        "id": "99bd73cd.aad8c",
        "type": "udp in",
        "z": "eb2c94ba.f33318",
        "name": "udp 10721",
        "iface": "",
        "port": "10721",
        "ipv": "udp4",
        "multicast": "false",
        "group": "",
        "datatype": "utf8",
        "x": 203.3333282470703,
        "y": 126.6666488647461,
        "wires": [
            [
                "913708a6.2e9c58"
            ]
        ]
    },
    {
        "id": "2584afbd.67fdd",
        "type": "tcp in",
        "z": "eb2c94ba.f33318",
        "name": "tcp 10723",
        "server": "server",
        "host": "",
        "port": "10723",
        "datamode": "stream",
        "datatype": "utf8",
        "newline": "\\n",
        "topic": "tcpIN",
        "base64": false,
        "x": 196.66665649414062,
        "y": 198.3333282470703,
        "wires": [
            [
                "d0f9e877.ab6ea8"
            ]
        ]
    },
    {
        "id": "d0f9e877.ab6ea8",
        "type": "function",
        "z": "eb2c94ba.f33318",
        "name": "chkData-in",
        "func": "var msg1 = {};  // error out\nvar msg2 = {};  // data out\nvar proto = \"udp\";\nif (msg.topic == \"tcpIN\") proto = \"tcp\"\nif (msg.payload === undefined || msg.payload.length === 0) {\n    msg1 = {\n        'proto': proto,\n        '_session': msg._session,\n\t\t'ip': msg.ip,\n\t\t'port': msg.port,\n\t\t'payload': \"debug\",\n\t\t'info': \"Error: Invalid Argument. [Raw:\"+msg.payload+\"]\"\n    }\n    msg2 = null;\n} else {\n    msg1 = null;\n    msg2 = {\n\t\t'payload': msg.payload,\n\t\t'remote': {\n\t\t    'proto': proto,\n\t\t    '_session': msg._session,\n\t\t\t'ip': msg.ip,\n\t\t\t'port': msg.port\n\t\t}\n    };\n}\nreturn [msg1,msg2];",
        "outputs": 2,
        "noerr": 0,
        "x": 371.66666412353516,
        "y": 198.33332633972168,
        "wires": [
            [
                "472303bb.49761c"
            ],
            [
                "aed05238.e59f8",
                "735453c7.42f0bc"
            ]
        ]
    },
    {
        "id": "aed05238.e59f8",
        "type": "debug",
        "z": "eb2c94ba.f33318",
        "name": "dataIN_GW",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 739.9999694824219,
        "y": 296.6666603088379,
        "wires": []
    },
    {
        "id": "472303bb.49761c",
        "type": "function",
        "z": "eb2c94ba.f33318",
        "name": "format Response",
        "func": "var d = new Date();     // get server local time\nvar d1 = (\"0\"+d.getDate()).slice(-2)+\"-\";\nd1 += (\"0\"+(d.getMonth()+1)).slice(-2)+\"-\";\nd1 += d.getFullYear()+\" \";\nd1 += (\"0\"+d.getHours()).slice(-2)+\":\";\nd1 += (\"0\"+d.getMinutes()).slice(-2)+\":\";\nd1 += (\"0\"+d.getSeconds()).slice(-2);\n\nvar debug_msg = {};\nvar tcpResp = {};\nvar udpResp = {};\ndebug_msg.payload = {\n  'time': d1,\n  'from': msg.ip +\":\"+msg.port,\n  'Resp': msg.payload.slice (0,-1),\n  'info': msg.info\n}\n\nif (msg.ip == '127.0.0.1') {          // local host, debug only\n  debug_msg.payload.info = \"[sim] \" + msg.info;\n  tcpResp = null; udpResp = null;\n} else if (msg.payload == \"debug\") {  // debug only\n  tcpResp = null; udpResp = null;\n} else {\n  if (msg.proto == \"tcp\") {\n    tcpResp = msg; udpResp = null;\n    debug_msg.payload.from += \" [tcp]\";\n  } else {\n    tcpResp = null; udpResp = msg;\n    debug_msg.payload.from += \" [udp]\";\n  }\n}\nreturn [debug_msg, tcpResp, udpResp];",
        "outputs": 3,
        "noerr": 0,
        "x": 1123.3332633972168,
        "y": 191.66666793823242,
        "wires": [
            [
                "4053ad76.6409b4"
            ],
            [
                "c476bd92.efbc7"
            ],
            [
                "92e9e121.abe82"
            ]
        ]
    },
    {
        "id": "c476bd92.efbc7",
        "type": "tcp out",
        "z": "eb2c94ba.f33318",
        "host": "",
        "port": "",
        "beserver": "reply",
        "base64": false,
        "end": false,
        "name": "tcpResponse",
        "x": 1374.999900817871,
        "y": 171.66666412353516,
        "wires": []
    },
    {
        "id": "92e9e121.abe82",
        "type": "udp out",
        "z": "eb2c94ba.f33318",
        "name": "udpResponse",
        "addr": "",
        "iface": "",
        "port": "",
        "ipv": "udp4",
        "outport": "",
        "base64": false,
        "multicast": "false",
        "x": 1384.999942779541,
        "y": 213.3333282470703,
        "wires": []
    },
    {
        "id": "4053ad76.6409b4",
        "type": "debug",
        "z": "eb2c94ba.f33318",
        "name": "Server resp-GW",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1386.6665687561035,
        "y": 128.33333587646484,
        "wires": []
    },
    {
        "id": "735453c7.42f0bc",
        "type": "function",
        "z": "eb2c94ba.f33318",
        "name": "extractData",
        "func": "var d = new Date(); // get server local time\nvar msg1 = {};      // error out\nvar msg2 = {};      // data out\nvar splitData = msg.payload.split(',');\nif (splitData.length == 6) {\n  var attempt = parseInt (\"0x\" + splitData[5].slice(2,4));\n  var NoResp  = parseInt (\"0x\" + splitData[5].slice(6,8));\n  if (NoResp > attempt) NoResp = attempt;\n  msg1 = null;\n  msg2 = {\n    payload: {'deviceID': splitData[2]},\n    remote: msg.remote,\n    DEVdata: {\n      'timestamp':  d,\n      'RetryNr':    parseInt (splitData[0].slice(4)) - 5,\n      'rcvKey':     splitData[0].slice(0,4),\n      'FWversion':  splitData[1],\n      'devID':      splitData[2],\n      'data': {\n        'batt':     parseInt (\"0x\" + splitData[4].slice(0,2)),\n        'distance': parseInt(splitData[3]),\n        'tempC':    parseInt (\"0x\" + splitData[4].slice(2,4)),\n        'rh':       parseInt (\"0x\" + splitData[4].slice(4,6)),\n        'rainCnt':  ((parseInt (\"0x\" + splitData[4].slice(6,8)) << 8) + parseInt (\"0x\" + splitData[4].slice(8,10)))\n      },\n      'sts': {\n        'reboot':   ((parseInt (\"0x\" + splitData[5].slice(0,2)) & 0x80)?1:0),\n        'attempt':  attempt,\n        'DNSfail':  parseInt (\"0x\" + splitData[5].slice(4,6)),\n        'NoResp':   NoResp,\n        'iNetfail': parseInt (\"0x\" + splitData[5].slice(8,10)),\n        'errWiFi':  parseInt (\"0x\" + splitData[5].slice(10,12)),\n        'errHost':  parseInt (\"0x\" + splitData[5].slice(12,14))\n      }\n    }\n  };\n} else {\n  msg1 = {\n    'proto':    msg.remote.proto,\n    '_session': msg._session,\n    'ip':       msg.remote.ip,\n    'port':     msg.remote.port,\n    'payload':  \"11,invalid parameter\\n\",\n    'info':     \"Error: Invalid parameter. Raw: \" + msg.payload\n  }\n  msg2 = null;\n}\nreturn [msg1,msg2];",
        "outputs": 2,
        "noerr": 0,
        "x": 371.6666564941406,
        "y": 261.6666564941406,
        "wires": [
            [],
            []
        ]
    }
]